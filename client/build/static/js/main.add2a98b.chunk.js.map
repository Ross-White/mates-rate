{"version":3,"sources":["utils/mutations.js","utils/auth.js","components/SignIn.js","components/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_USER","gql","ADD_PROFILE","ID_TOKEN","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","window","location","reload","SignIn","useState","email","password","formState","setFormState","useMutation","login","error","data","handleChange","event","target","name","value","handleFormSubmit","a","preventDefault","console","log","variables","Auth","className","to","onSubmit","placeholder","type","onChange","style","cursor","message","Signup","addProfile","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.add2a98b.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      profile {\n        _id\n        name\n      }\n    }\n  }\n`;\n\nexport const ADD_PROFILE = gql`\n  mutation addProfile($name: String!, $email: String!, $password: String!) {\n    addProfile(name: $name, email: $email, password: $password) {\n      token\n      profile {\n        _id\n        name\n      }\n    }\n  }\n`;","import { decode } from \"jsonwebtoken\";\n\nconst ID_TOKEN = 'id_token'\n\nclass AuthService {\n    getProfile() {\n        return decode(this.getToken());\n    }\n\n    loggedIn() {\n        const token = this.getToken();\n        return token && !this.isTokenExpired(token) ? true : false;\n    }\n\n    isTokenExpired(token) {\n        const decoded = decode(token);\n        if (decoded.exp < Date.now() / 1000) {\n            localStorage.removeItem(ID_TOKEN);\n            return true;\n        }\n        return false;\n    }\n\n    getToken() {\n        return localStorage.getItem(ID_TOKEN)\n    }\n\n    login(idToken) {\n        localStorage.removeItem(ID_TOKEN);\n        window.location.reload();\n    }\n}\n\nexport default new AuthService();","import React, { useState } from \"react\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport { Link } from 'react-router-dom';\nimport Auth from \"../utils/auth\";\nimport { useMutation } from \"@apollo/client\";\n\nexport default function SignIn() {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleChange = (event) => {\n      const { name, value } = event.target;\n\n      setFormState({\n          ...formState,\n          [name]: value,\n      });\n  };\n\n  const handleFormSubmit = async (event) => {\n      event.preventDefault();\n      console.log(formState);\n      try {\n          const { data } = await login({\n              variables: { ...formState },\n\n          });\n\n          Auth.login(data.login.token);\n      } catch (e) {\n          console.error(e)\n      }\n\n      setFormState({\n          email: '',\n          password: '',\n      })\n  };\n\n  return (\n    <main className=\"flex justify-center\">\n    <div className=\"\">\n      <div className=\"\">\n        <h4 className=\"p-2\">Login</h4>\n        <div className=\"card-body\">\n          {data ? (\n            <p>\n              Success! You may now head{' '}\n              <Link to=\"/\">back to the homepage.</Link>\n            </p>\n          ) : (\n            <form onSubmit={handleFormSubmit}>\n              <input\n                className=\"form-input\"\n                placeholder=\"Your email\"\n                name=\"email\"\n                type=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                value={formState.password}\n                onChange={handleChange}\n              />\n              <button\n                className=\"btn btn-block btn-info\"\n                style={{ cursor: 'pointer' }}\n                type=\"submit\"\n              >\n                Submit\n              </button>\n            </form>\n          )}\n\n          {error && (\n            <div className=\"my-3 p-3 bg-danger text-white\">\n              {error.message}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  </main>\n  );\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_PROFILE } from '../utils/mutations';\n\nimport Auth from '../utils/auth'\n\nconst Signup = () => {\n    const [formState, setFormState] = useState({\n      name: '',\n      email: '',\n      password: '',\n    });\n    const [addProfile, { error, data }] = useMutation(ADD_PROFILE);\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n    \n        setFormState({\n          ...formState,\n          [name]: value,\n        });\n    };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log(formState);\n    \n        try {\n          const { data } = await addProfile({\n            variables: { ...formState },\n          });\n    \n          Auth.login(data.addProfile.token);\n        } catch (e) {\n          console.error(e);\n        }\n    };\n\n    return (\n        <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your username\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-info\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n    );\n  };\n  \n  export default Signup;","import './App.css';\nimport React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n\nimport Login from './components/SignIn';\nimport Signup from './components/SignUp';\n// import Signup from './components/SignUp';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-h-full\">\n          <div className=\"container\">\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n          </div>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}